{"version":3,"sources":["store/userActions.js","store/reducers.js","store/useStore.js","components/burger/OrderButton.js","utils/burger.js","store/actions.js","components/service/BurgerController.js","components/burger/BurgerItem.js","components/burger/BurgerList.js","layout/burger/index.js","layout/index.js","App.js","index.js"],"names":["userActions","ADD_ITEM","_ref","_ref2","burgerItems","item","concat","Object","toConsumableArray","NEW_BURGER","initialState","objectSpread","StoreContext","createContext","Actions","rootReducer","state","action","update","act","type","payload","StoreProvider","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","value","useStore","_useContext","useContext","OrderButton","onClick","style","border","borderRadius","padding","width","display","fontWeight","justifyContent","height","alignItems","cursor","randomInterval","end","start","arguments","length","undefined","Math","floor","random","getItem","index","BurgerController","boundAddItem","addItem","boundNewBurger","getBurger","burgerSize","items","includes","push","generateItems","forEach","useEffect","BurgerItem","margin","maxWidth","maxHeight","src","alt","BurgerList","flexDirection","map","x","i","burger_BurgerItem","key","BurgerLayout","minWidth","minHeight","backgroundColor","Layout","App","rootElement","document","getElementById","ReactDOM","render","useStore_StoreProvider"],"mappings":"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","file":"static/js/main.78029242.chunk.js","sourcesContent":["import { addItem, newBurger } from './reducers';\n\nexport const userInitialState = {\n  burgerItems: [],\n};\n\nexport const userActions = {\n  ADD_ITEM: addItem,\n  NEW_BURGER: newBurger,\n};\n","export const addItem = ({ burgerItems }, { item }) => ({\n  burgerItems: [...burgerItems, item],\n});\n\nexport const newBurger = () => ({ burgerItems: [] });\n","import React, { createContext, useReducer, useContext } from 'react';\n\nimport { userInitialState, userActions } from './userActions';\n\nconst initialState = {\n  ...userInitialState,\n};\n\nconst StoreContext = createContext(initialState);\n\n// this will act as a map of actions that will trigger state mutations\nconst Actions = {\n  ...userActions,\n};\n\n// the reducer is called whenever a dispatch action is made.\n// the action.type is a string which maps to a function in Actions.\n// We apply the update to existing state, and return a new copy of state.\nconst rootReducer = (state, action) => {\n  const act = Actions[action.type];\n  const update = act(state, action.payload);\n  return { ...state, ...update };\n};\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(rootReducer, initialState);\n\n  return (\n    <StoreContext.Provider value={{ state, dispatch }}>\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nexport const useStore = () => {\n  const { state, dispatch } = useContext(StoreContext);\n  return { state, dispatch };\n};\n","import React from 'react';\n\nexport default function OrderButton({ onClick }) {\n  const style = {\n    border: '1px solid black',\n    borderRadius: '20px',\n    padding: '3px',\n    width: '200px',\n    display: 'flex',\n    fontWeight: '500',\n    justifyContent: 'center',\n    height: '30px',\n    alignItems: 'center',\n    cursor: 'pointer',\n  };\n\n  return (\n    <span onClick={onClick} style={style}>\n      Give me a damn burger!\n    </span>\n  );\n}\n","const burgerItems = ['Salad', 'Bacon', 'Egg', 'Cheese', 'Meat'];\n\nexport function randomInterval(end, start = 0) {\n  return Math.floor(Math.random() * end) + start;\n}\n\nexport function getItem() {\n  const index = randomInterval(burgerItems.length);\n  return burgerItems[index];\n}\n\nexport function generateItems(length) {\n  const items = [];\n  while (items.length < length) {\n    let item = getItem();\n    while (items.includes(item)) {\n      item = getItem();\n    }\n    items.push(item);\n  }\n\n  return items;\n}\n","export const ADD_ITEM = 'ADD_ITEM';\nexport const NEW_BURGER = 'NEW_BURGER';\n\nexport function addItem(item) {\n  return { type: ADD_ITEM, payload: { item } };\n}\n\nexport function newBurger() {\n  return { type: NEW_BURGER };\n}\n","import React, { useEffect } from 'react';\n\nimport OrderButton from '../burger/OrderButton';\nimport { generateItems, randomInterval } from '../../utils/burger';\nimport { useStore } from '../../store/useStore';\nimport { newBurger, addItem } from '../../store/actions';\n\nexport default function BurgerController() {\n  const { dispatch } = useStore();\n\n  const boundAddItem = (item) => dispatch(addItem(item));\n  const boundNewBurger = () => dispatch(newBurger());\n\n  const getBurger = () => {\n    boundNewBurger();\n\n    const burgerSize = randomInterval(5, 1);\n    const burgerItems = ['Top'].concat(generateItems(burgerSize), ['Bottom']);\n    burgerItems.forEach((item) => boundAddItem(item));\n  };\n\n  useEffect(() => {\n    getBurger();\n  }, []);\n\n  return (\n    <div>\n      <OrderButton onClick={getBurger} />\n    </div>\n  );\n}\n","import React from 'react';\n\nconst BurgerItem = ({ item }) => {\n  const style = {\n    margin: '2px',\n  };\n\n  const imgStyle = {\n    height: 'auto',\n    width: 'auto',\n    maxWidth: '100px',\n    maxHeight: '100px',\n  };\n\n  return (\n    <div style={style}>\n      <img style={imgStyle} src={`${item}.png`} alt=\"logo\" />\n    </div>\n  );\n};\n\n// {item}\n\nexport default BurgerItem;\n","import React from 'react';\n\nimport BurgerItem from './BurgerItem';\nimport { useStore } from '../../store/useStore';\n\nexport default function BurgerList() {\n  const { state } = useStore();\n\n  const getContent = () => {\n    return state.burgerItems.map((x, i) => <BurgerItem item={x} key={i} />);\n  };\n\n  const style = {\n    border: '1px solid black',\n    height: '80%',\n    width: '80%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  };\n  return <div style={style}>{getContent()}</div>;\n}\n","import React from 'react';\n\nimport BurgerController from '../../components/service/BurgerController';\nimport BurgerList from '../../components/burger/BurgerList';\n\nexport default function BurgerLayout() {\n  const style = {\n    minWidth: '300px',\n    minHeight: '350px',\n    width: '95%',\n    height: '95%',\n    backgroundColor: 'white',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  };\n\n  return (\n    <div style={style}>\n      <BurgerController />\n      <BurgerList />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport BurgerLayout from './burger';\n\nexport default function Layout() {\n  const style = {\n    width: '100vw',\n    height: '100vh',\n    backgroundColor: 'lightgrey',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  };\n\n  return (\n    <div style={style}>\n      <BurgerLayout />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport Layout from './layout';\n\nexport default function App() {\n  return <Layout />;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { StoreProvider } from './store/useStore';\nimport App from './App';\nimport './index.css';\n\nfunction Main() {\n  return (\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  );\n}\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}